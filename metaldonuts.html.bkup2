<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

svg {
  padding: 10px 0 0 10px;
}


.arc {
  stroke: #fff;
}
div.columns       { width: 100%; }
div.columns div   {float: left; }
div.chart0          { width: 1040px; background-color: #fff; }
div.chart1          { width: 1040px; background-color: #fff; }
div.chart2          { width: 1040px; background-color: #fff; }
div.chart3          { width: 1040px; background-color: #fff; }
div.chart4          { width: 1040px; background-color: #fff; }
div.chart5          { width: 1040px; background-color: #fff; }
div.lege           { width: 150px; background-color: #fff; }
div.clear         { clear: both; }
div.title {font-size:large;text-align: center;}
div.continents {width:100%;text-align: center;}

</style>
<body>
<div class="title">
  <h1> Ownership of Mines in Africa</h1>
  </div>
  <div class="continents">
    <form>
  <label><input type="radio" name="mode" value="Europe"> Europe</label>
  <label><input type="radio" name="mode" value="Asia" checked> Asia</label>
  <label><input type="radio" name="mode" value="N.America"> N. America</label>
  <label><input type="radio" name="mode" value="Oceania" checked> Oceania</label>
  <label><input type="radio" name="mode" value="S.America"> S.America</label>
  <label><input type="radio" name="mode" value="Africa" checked> Africa</label>
</form>
  </div>
<div class="columns">
    <div class="lege" ></div>
    <div class="chart2"></div>
    <div class="chart1"></div>
    <div class="chart3"></div>
    <div class="chart4"></div>
    <div class="chart5"></div>
    <div class="chart0"></div>
</div>
<div class="clear"></div>

<script src="js/d3.min.js"></script>
<script src="js/colorbrewer.js" type="text/javascript"></script>
<script>

var radius = 74,
    padding = 10;

var color = d3.scale.ordinal()
            .range(['#addd8e','#1c9099','#ffdd11','#7fcdbb','#000000','#dd1c77','#2b8cbe','#d95f0e','#edf8b1','#571B02','#99aabb','#fec44f','#8856a7','#2c7fb8','#31a354','#922729','#c51b8a','#333355','#ffffb3','#334444','#c994c7','#ff6600','#886655','#fa9fb5','#ccbbff']);
            //range(['#edf8b1', '#fec44f', '#ffdd11','#000000','#d95f0e','#7fcdbb','#2c7fb8','#31a354','#addd8e', '#c51b8a','#fa9fb5', '#dd1c77', '#c994c7', '#1c9099', '#571B02', '#2b8cbe','#8856a7','#ffffb3','#886655','#922729','#334444','#99aabb','#333355','#ff6600','#ccbbff']);

var arc = d3.svg.arc()
    .outerRadius(radius)
    .innerRadius(radius - 30);

var pie = d3.layout.pie()
    .sort(null)
    .value(function(d) { return d.count; });

d3.csv("data/foreignownership.csv", function(error, data) {

    color.domain(['Dia','Mn','Au','Coal','Cu','Co','Ni','PGM','Ag','Pb','Zn','Coltan','U','Al','Fe','Cr','Mo','Sn','W','PO43','Ti','Li','Sb','V','Zr'].sort());

  var nested_data1 = d3.nest()
                    .key(function(d) {return d.Continent})
                    .sortKeys(d3.ascending)
                    .key(function(d) {return d.Companycountry})
                    .sortKeys(d3.ascending)
                    .key(function(d){return d.Mine})
                    .key(function(d){return d.Metal})
                    //.key(function(d){return d.Mine})
                    .rollup(function(m){return {'count': m.length};})
                    .entries(data)

  //console.log(nested_data1[0].values.length)
  //console.log(nested_data1)
  console.log("--------------------")

 nested_data1.forEach(function(a){
 a.values.forEach(function(d) {
    var cout = 0;
    c_key = d.key;
    d.minesNo = d.values.length;
   // console.log(d.key);
    var metalhold =[];
    var metalhold2 =[]
    //current = null;
    d.values.forEach(function(m){
      m.values.forEach(function(n){

        metalhold.push(n.key);
      })

    })
    //console.log("metalhold1------------");
    metalhold.sort();
    //console.log(metalhold);
    //console.log("metalholdII------------");

    var current = null;
    var cnt = 0;
    for (var i = 0; i < metalhold.length; i++) {
        if (metalhold[i] != current) {
            if (cnt > 0) {
                //console.log(current + ' comes --> ' + cnt + ' times<br>');
                metalhold2.push({key:current,count:cnt});

            }
            current = metalhold[i];
            cnt = 1;
        } else {
            cnt++;
        }
    }
    if (cnt > 0) {
        //console.log(current + ' comes --> ' + cnt + ' times');
        metalhold2.push({key:current,count:cnt});
    }
    //console.log(metalhold2)

    d.metals = color.domain().map(function(name){
            metalhold2.some(function(e){
              if(name === e.key){
                //console.log(e.key +" : "+e.values.count);
                return cout = +e.count;
              }
              else return cout = 0;
            })
            return {name:name, count:cout};})
  });
});
  console.log("--------------------")
  console.log(nested_data1)              

  var legend = d3.select(".lege").append("svg")
      .attr("class", "legend")
      .attr("width", radius * 2)
      .attr("height", radius * 24)
    .selectAll("g")
      .data(color.domain().slice().reverse())
    .enter().append("g")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  legend.append("rect")
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color);

  legend.append("text")
      .attr("x", 24)
      .attr("y", 9)
      .attr("dy", ".35em")
      .text(function(d) { return d; });

nested_data1.forEach(function(a, i){
  var svg = d3.select(".chart"+i).selectAll(".pie")
      .data(a.values)
    .enter().append("svg")
      .attr("class", "pie")
      .attr("width", radius * 2)
      .attr("height", radius * 2)
    .append("g")
      .attr("transform", "translate(" + radius + "," + radius + ")");

  svg.selectAll(".arc")
      .data(function(d) { return pie(d.metals); })
    .enter().append("path")
      .attr("class", "arc")
      .attr("d", arc)
      .style("fill", function(d) { return color(d.data.name); });

  svg.append("text")
      .attr("dy", ".35em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.key });

  svg.append("text")
      .attr("dy", "1.55em")
      .style("text-anchor", "middle")
      .text(function(d) { return 'Mines #: '+d.minesNo; });});

  //    changeContinents("Africa");
  /*function changeContinents(continentName){
    nested_data1.some(function(q){
      if(continentName === q.key)
      {
        console.log(q.key);
      }
    })
  }*/

});

</script>